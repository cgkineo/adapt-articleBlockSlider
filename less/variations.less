.has-slidercontrols-arrows {
  @media (max-width: @device-width-large + (@abs-arrow-spacing * 2)) {

    // pull in the blocks sides to accomodate the arrow buttons on mobile and tablet
    .block__container {
      margin: 0 @item-padding + (@btn-size * @btn-line-height) + @btn-padding;
    }

  }

  // keep arrows inside abs-arrows-controls-width
  @media (min-width: @abs-arrows-controls-width) {

    button[name="previousArrow"] {
      left: 50%;
      transform: translate(~"calc(-@{abs-arrows-controls-width} / 2)", -50%);
      .dir-rtl & {
        left: 50%;
        transform: translate(~"calc(-100% + @{abs-arrows-controls-width} / 2)", -50%);
      }
    }

    button[name="nextArrow"] {
      left: 50%;
      transform: translate(~"calc(-100% + @{abs-arrows-controls-width} / 2)", -50%);
      .dir-rtl & {
        left: 50%;
        transform: translate(~"calc(-@{abs-arrows-controls-width} / 2)", -50%);
      }
    }

  }
}

// minimum of full screen height
.is-abs-full-height {
  min-height: calc(100vh - @navigation-height);

  .article__inner {
    flex-grow: 1;
  }

}

// centrally position abs elements
.is-abs-full-height,
.is-abs-uniform-height {

  .block__container {
    align-items: center;
    min-height: 100%;
  }

}

.trickle {

  // Trickle spacing
  .abs.has-slidercontrols-nextprevious {
    .slidercontrols__bottom {
      margin-bottom: (@btn-size * @btn-line-height) + @btn-padding;
    }
  }

  .abs:not(.has-slidercontrols-nextprevious) {
    .article__inner {
      margin-bottom: (@btn-size * @btn-line-height) + @btn-padding;
    }
  }

}
